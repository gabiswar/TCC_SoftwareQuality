# [[0,0,0],[0,0,0],[0,0,0]]
# Gráfico 1: Métricas Coesão
metricas_coesao = ['lcom', 'tcc', 'lcc']
dados_coesao = np.array([
    [[60,0,40],[20,80,0],[40,0,60]], # GPT
    [[50,0,50],[44.4,22.2,33.3],[33.3,0,66.7]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0]], # Copilot
    [[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 2: Métricas Acoplamento
metricas_acoplamento = ['cbo', 'fanin', 'fanout', 'rfc']
dados_acoplamento = np.array([
    [[100,0,0],[60,40,0],[100,0,0],[80,20,0]],   # GPT
    [[100,0,0],[40,60,0],[90,10,0],[80,10,10]],   # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 3: Métricas Tamanho 1
metricas_tamanho1 = ['wmc', 'loc', 'totalMethodsQty', 'staticMethodsQty', 'publicMethodsQty', 'abstractMethodsQty', 'finalMethodsQty', 'synchronizedMethodsQty']
dados_tamanho1 = np.array([
    [[20,60,20],[60,20,20],[20,80,0],[80,20,0],[20,80,0],[100,0,0],[100,0,0],[100,0,0]],  # GPT
    [[30,60,10],[30,60,10],[20,70,10],[90,0,10],[10,60,30],[100,0,0],[100,0,0],[100,0,0]],  # Deep
        [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 4: Métricas Tamanho 2
metricas_tamanho2 = ['totalFieldsQty', 'publicFieldsQty', 'finalFieldsQty', 'staticFieldsQty', 'synchronizedFieldsQty', 'anonymousClassesQty', 'innerClassesQty']
dados_tamanho2 = np.array([
    [[60,40,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0]], # GPT
    [[60,40,0],[100,0,0],[100,0,0],[90,10,0],[100,0,0],[100,0,0],[100,0,0]],  # Deep
        [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],   # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 5: Métricas Tamanho 3
metricas_tamanho3 = ['numbersQty', 'assignmentsQty', 'stringLiteralsQty', 'variablesQty', 'lambdasQty', 'uniqueWordsQty', 'logStatementsQty', 'modifiers']
dados_tamanho3 = np.array([
    [[80,0,20],[60,20,20],[40,40,20],[80,0,20],[100,0,0],[80,20,0],[100,0,0],[100,0,0]],  # GPT
    [[90,0,10],[40,50,10],[70,20,10],[70,20,10],[100,0,0],[90,0,10],[100,0,0],[100,0,0]],  # Deep
        [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]# Gemini
])

# Gráfico 6: Métricas Tamanho 4
metricas_tamanho4 = ['returnQty', 'loopQty', 'comparisonsQty', 'tryCatchQty ', 'parenthesizedExpsQty', 'mathOperationsQty', 'maxNestedBlocksQty']
dados_tamanho4 = np.array([
    [[0,100,0],[80,20,0],[80,20,0],[100,0,0],[100,0,0],[100,0,0],[60,20,20]],   # GPT
    [[0,80,20],[90,0,10],[90,10,0],[100,0,0],[100,0,0],[90,0,10],[60,40,0]], # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0], [0,0,0]], # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 7: Ocultação de informações
metricas_ocultacao = ['privateMethodsQty', 'protectedMethodsQty', 'defaultMethodsQty', 'privateFieldsQty', 'protectedFieldsQty', 'defaultFieldsQty']
dados_ocultacao = np.array([
    [[100,0,0],[100,0,0],[100,0,0],[40,60,0],[100,0,0],[100,0,0]],   # GPT
    [[90,0,10],[100,0,0],[100,0,0],[30,60,10],[100,0,0],[100,0,0]],   # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],   # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]], # Gemini
])

# Gráfico 8: Métricas Herança
metricas_heranca = ['dit', 'noc', 'nosi']
dados_heranca = np.array([
    [[100,0,0],[100,0,0],[80,20,0]],  # GPT
    [[100,0,0],[100,0,0],[90,0,10]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0]]   # Gemini
])
