"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerConnection = exports.MainConnection = void 0;
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
const worker_threads_1 = require("worker_threads");
const connection_1 = require("../common/connection");
class MainConnection extends connection_1.BaseMainConnection {
    port;
    constructor(port) {
        super();
        this.port = port;
    }
    dispose() {
        this.port.removeAllListeners('message');
        if (this.port instanceof worker_threads_1.MessagePort) {
            this.port.close();
        }
        super.dispose();
    }
    postMessage(message, transferList) {
        this.port.postMessage(message, transferList);
    }
    listen() {
        this.port.on('message', (value) => {
            this.handleMessage(value);
        });
    }
}
exports.MainConnection = MainConnection;
class WorkerConnection extends connection_1.BaseWorkerConnection {
    port;
    constructor(port, world, timeout) {
        super(world, timeout);
        this.port = port;
    }
    dispose() {
        this.port.removeAllListeners('message');
        super.dispose();
    }
    postMessage(message, transferList) {
        this.port.postMessage(message, transferList);
    }
    listen() {
        this.port.on('message', (value) => {
            this.handleMessage(value);
        });
    }
}
exports.WorkerConnection = WorkerConnection;
