# Gráfico 1: Métricas Coesão
metricas_coesao = ['lcom', 'tcc', 'lcc']
dados_coesao = np.array([
    [[33.3,0,66.7],[80,0,20],[60,20,20]], # GPT
    [[0,0,0],[0,0,0],[0,0,0]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0]], # Copilot
    [[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 2: Métricas Acoplamento
metricas_acoplamento = ['cbo', 'fanin', 'fanout', 'rfc']
dados_acoplamento = np.array([
    [[100,0,0],[66.7,33.3,0],[100,0,0],[66.7,33.3,0]],   # GPT
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0]],   # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 3: Métricas Tamanho 1
metricas_tamanho1 = ['wmc', 'loc', 'totalMethodsQty', 'staticMethodsQty', 'publicMethodsQty', 'abstractMethodsQty', 'finalMethodsQty', 'synchronizedMethodsQty']
dados_tamanho1 = np.array([
    [[50,50,0],[66.7,33.3,0],[66.7,33.3,0],[83.3,16.7,0],[66.7,33.3,0],[100,0,0],[100,0,0],[100,0,0]],  # GPT
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 4: Métricas Tamanho 2
metricas_tamanho2 = ['totalFieldsQty', 'publicFieldsQty', 'finalFieldsQty', 'staticFieldsQty', 'synchronizedFieldsQty', 'anonymousClassesQty', 'innerClassesQty']
dados_tamanho2 = np.array([
    [[83.3,16.7,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0]], # GPT
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],   # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 5: Métricas Tamanho 3
metricas_tamanho3 = ['numbersQty', 'assignmentsQty', 'stringLiteralsQty', 'variablesQty', 'lambdasQty', 'uniqueWordsQty', 'logStatementsQty', 'modifiers']
dados_tamanho3 = np.array([
    [[66.7,16.7,16.7],[66.7,33.3,0],[83.3,0,16.7],[83.3,16.7,0],[100,0,0],[83.3,16.7,0],[100,0,0],[83.3,0,16.7]],  # GPT
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 6: Métricas Tamanho 4
metricas_tamanho4 = ['returnQty', 'loopQty', 'comparisonsQty', 'tryCatchQty ', 'parenthesizedExpsQty', 'mathOperationsQty', 'maxNestedBlocksQty']
dados_tamanho4 = np.array([
    [[66.7,33.3,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[66.7,33.3,0]],   # GPT
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]], # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]], # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]] # Gemini
])

# Gráfico 7: Ocultação de informações
metricas_ocultacao = ['privateMethodsQty', 'protectedMethodsQty', 'defaultMethodsQty', 'privateFieldsQty', 'protectedFieldsQty', 'defaultFieldsQty']
dados_ocultacao = np.array([
    [[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0],[100,0,0]],   # GPT
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],   # Deep
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],   # Copilot
    [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]], # Gemini
])

# Gráfico 8: Métricas Herança
metricas_heranca = ['dit', 'noc', 'nosi']
dados_heranca = np.array([
    [[100,0,0],[100,0,0],[83.3,16.7,0]],  # GPT
    [[0,0,0],[0,0,0],[0,0,0]],  # Deep
    [[0,0,0],[0,0,0],[0,0,0]],  # Copilot
    [[0,0,0],[0,0,0],[0,0,0]]   # Gemini
])
